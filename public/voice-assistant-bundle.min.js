/*! Voice Assistant Bundle - Minified Version */
!function(t){"use strict";const e={base64ToArrayBuffer(t){const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;t++)n[t]=e.charCodeAt(t);return n.buffer},arrayBufferToBase64(t){let e="";const n=new Uint8Array(t),i=n.byteLength;for(let t=0;t<i;t++)e+=String.fromCharCode(n[t]);return btoa(e)},async audioContext(t={}){const e=new Promise(t=>{const e=()=>{document.removeEventListener("pointerdown",e),document.removeEventListener("keydown",e),document.removeEventListener("click",e),t()};document.addEventListener("pointerdown",e,{once:!0}),document.addEventListener("keydown",e,{once:!0}),document.addEventListener("click",e,{once:!0})});try{const e=new Audio;return e.src="data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA",await e.play(),new AudioContext(t)}catch(n){return await e,new AudioContext(t)}},createWorkletFromSrc(t,e){const n=new Blob([`registerProcessor("${t}", ${e})`],{type:"application/javascript"});return URL.createObjectURL(n)}};class EventEmitter{constructor(){this.events={}}on(t,e){return this.events[t]||(this.events[t]=[]),this.events[t].push(e),this}off(t,e){return this.events[t]?(this.events[t]=this.events[t].filter(t=>t!==e),this):this}emit(t,...e){return!!this.events[t]&&(this.events[t].forEach(t=>t.apply(this,e)),!0)}}const n='\n        class AudioProcessingWorklet extends AudioWorkletProcessor {\n          buffer = new Int16Array(2048);\n          bufferWriteIndex = 0;\n  \n          constructor() {\n            super();\n            this.hasAudio = false;\n          }\n  \n          process(inputs) {\n            if (inputs[0].length) {\n              const channel0 = inputs[0][0];\n              this.processChunk(channel0);\n            }\n            return true;\n          }\n  \n          sendAndClearBuffer() {\n            this.port.postMessage({\n              event: "chunk",\n              data: {\n                int16arrayBuffer: this.buffer.slice(0, this.bufferWriteIndex).buffer,\n              },\n            });\n            this.bufferWriteIndex = 0;\n          }\n  \n          processChunk(float32Array) {\n            const l = float32Array.length;\n            \n            for (let i = 0; i < l; i++) {\n              const int16Value = float32Array[i] * 32768;\n              this.buffer[this.bufferWriteIndex++] = int16Value;\n              if(this.bufferWriteIndex >= this.buffer.length) {\n                this.sendAndClearBuffer();\n              }\n            }\n  \n            if(this.bufferWriteIndex >= this.buffer.length) {\n              this.sendAndClearBuffer();\n            }\n          }\n        }\n      ',i="\n        class VolMeter extends AudioWorkletProcessor {\n          volume\n          updateIntervalInMS\n          nextUpdateFrame\n  \n          constructor() {\n            super()\n            this.volume = 0\n            this.updateIntervalInMS = 25\n            this.nextUpdateFrame = this.updateIntervalInMS\n            this.port.onmessage = event => {\n              if (event.data.updateIntervalInMS) {\n                this.updateIntervalInMS = event.data.updateIntervalInMS\n              }\n            }\n          }\n  \n          get intervalInFrames() {\n            return (this.updateIntervalInMS / 1000) * sampleRate\n          }\n  \n          process(inputs) {\n            const input = inputs[0]\n  \n            if (input.length > 0) {\n              const samples = input[0]\n              let sum = 0\n              let rms = 0\n  \n              for (let i = 0; i < samples.length; ++i) {\n                sum += samples[i] * samples[i]\n              }\n  \n              rms = Math.sqrt(sum / samples.length)\n              this.volume = Math.max(rms, this.volume * 0.7)\n  \n              this.nextUpdateFrame -= samples.length\n              if (this.nextUpdateFrame < 0) {\n                this.nextUpdateFrame += this.intervalInFrames\n                this.port.postMessage({volume: this.volume})\n              }\n            }\n  \n            return true\n          }\n        }\n      ";class s extends EventEmitter{constructor(t){super(),this.backendUrl=t,this.ws=null,this._status="disconnected",this._model=null,this.config=null,this.reconnectAttempts=0,this.maxReconnectAttempts=5,this.reconnectDelay=1e3,this.send=this.send.bind(this)}get status(){return this._status}get model(){return this._model}getConfig(){return{...this.config}}log(t,e){const n={date:new Date,type:t,message:e};this.emit("log",n)}setupWebSocket(){try{this.ws=new WebSocket(this.backendUrl),this.ws.onopen=()=>{console.log("Connected to backend WebSocket"),this._status="connected",this.reconnectAttempts=0,this.emit("open"),this.log("client.open","Connected to backend")},this.ws.onmessage=t=>{try{const e=JSON.parse(t.data);this.handleBackendMessage(e)}catch(t){console.error("Error parsing WebSocket message:",t)}},this.ws.onclose=t=>{console.log("WebSocket connection closed:",t.code,t.reason),this._status="disconnected",this.emit("close",t),this.log("client.close",`Disconnected: ${t.reason||"Connection closed"}`),1e3!==t.code&&this.reconnectAttempts<this.maxReconnectAttempts&&setTimeout(()=>{this.reconnectAttempts++,console.log(`Reconnection attempt ${this.reconnectAttempts}/${this.maxReconnectAttempts}`),this.setupWebSocket()},this.reconnectDelay*this.reconnectAttempts)},this.ws.onerror=t=>{console.error("WebSocket error:",t),this.emit("error",t),this.log("client.error","WebSocket connection error")}}catch(t){console.error("Failed to create WebSocket connection:",t),this._status="disconnected"}}handleBackendMessage(t){switch(t.type){case"connected":this.emit("open");break;case"disconnected":this._status="disconnected",this.emit("close",new CloseEvent("close"));break;case"setupComplete":this.emit("setupcomplete");break;case"content":this.emit("content",t.data);break;case"audio":const n=e.base64ToArrayBuffer(t.data);this.emit("audio",n);break;case"toolCall":this.emit("toolcall",t.data);break;case"toolCallCancellation":this.emit("toolcallcancellation",t.data);break;case"interrupted":this.emit("interrupted");break;case"turnComplete":this.emit("turncomplete");break;case"error":this.emit("error",new ErrorEvent("error",{message:t.message}));break;case"log":this.emit("log",t.data);break;default:console.log("Unknown message type from backend:",t.type)}}sendToBackend(t){this.ws&&this.ws.readyState===WebSocket.OPEN?this.ws.send(JSON.stringify(t)):console.warn("WebSocket not connected, message not sent:",t)}async connect(t,e){return"connected"!==this._status&&"connecting"!==this._status&&(this._status="connecting",this.config=e,this._model=t,this.setupWebSocket(),new Promise(n=>{const i=()=>{this.sendToBackend({type:"connect",model:t,config:e}),this.off("open",i),n(!0)},s=()=>{this.off("error",s),this.off("open",i),n(!1)};this.on("open",i),this.on("error",s)}))}disconnect(){return"disconnected"!==this._status&&(this.sendToBackend({type:"disconnect"}),this.ws&&(this.ws.close(1e3,"Client disconnect"),this.ws=null),this._status="disconnected",this.log("client.close","Disconnected"),!0)}sendRealtimeInput(t){if("connected"!==this._status)return;this.sendToBackend({type:"sendRealtimeInput",data:t});let e=!1,n=!1;for(const i of t)if(i.mimeType.includes("audio")&&(e=!0),i.mimeType.includes("image")&&(n=!0),e&&n)break;const i=e&&n?"audio + video":e?"audio":n?"video":"unknown";this.log("client.realtimeInput",i)}sendToolResponse(t){"connected"===this._status&&t.functionResponses&&t.functionResponses.length&&(this.sendToBackend({type:"sendToolResponse",data:t}),this.log("client.toolResponse",t))}send(t,e=!0){"connected"===this._status&&(this.sendToBackend({type:"send",data:{turns:t,turnComplete:e}}),this.log("client.send",{turns:Array.isArray(t)?t:[t],turnComplete:e}))}}class o extends EventEmitter{constructor(t=16e3){super(),this.sampleRate=t,this.stream=void 0,this.audioContext=void 0,this.source=void 0,this.recording=!1,this.recordingWorklet=void 0,this.vuWorklet=void 0,this.starting=null}async start(){if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new Error("Could not request user media");return this.starting=new Promise(async(t,s)=>{try{this.stream=await navigator.mediaDevices.getUserMedia({audio:!0}),this.audioContext=await e.audioContext({sampleRate:this.sampleRate}),this.source=this.audioContext.createMediaStreamSource(this.stream);const s="audio-recorder-worklet",o=e.createWorkletFromSrc(s,n);await this.audioContext.audioWorklet.addModule(o),this.recordingWorklet=new AudioWorkletNode(this.audioContext,s),this.recordingWorklet.port.onmessage=async t=>{const n=t.data.data.int16arrayBuffer;if(n){const t=e.arrayBufferToBase64(n);this.emit("data",t)}},this.source.connect(this.recordingWorklet);const a="vu-meter";await this.audioContext.audioWorklet.addModule(e.createWorkletFromSrc(a,i)),this.vuWorklet=new AudioWorkletNode(this.audioContext,a),this.vuWorklet.port.onmessage=t=>{this.emit("volume",t.data.volume)},this.source.connect(this.vuWorklet),this.recording=!0,t(),this.starting=null}catch(t){s(t)}}),this.starting}stop(){const t=()=>{this.source?.disconnect(),this.stream?.getTracks().forEach(t=>t.stop()),this.stream=void 0,this.recordingWorklet=void 0,this.vuWorklet=void 0,this.recording=!1};this.starting?this.starting.then(t):t()}}class a{constructor(t){this.context=t,this.sampleRate=24e3,this.bufferSize=7680,this.audioQueue=[],this.isPlaying=!1,this.isStreamComplete=!1,this.checkInterval=null,this.scheduledTime=0,this.initialBufferTime=.1,this.gainNode=this.context.createGain(),this.source=this.context.createBufferSource(),this.endOfQueueAudioSource=null,this.gainNode.connect(this.context.destination),this.onComplete=()=>{}}async addWorklet(t,n,i){const s=e.createWorkletFromSrc(t,n);return await this.context.audioWorklet.addModule(s),new AudioWorkletNode(this.context,t).port.onmessage=i,this}_processPCM16Chunk(t){const e=new Float32Array(t.length/2),n=new DataView(t.buffer);for(let i=0;i<t.length/2;i++)try{const t=n.getInt16(2*i,!0);e[i]=t/32768}catch(t){console.error(t)}return e}addPCM16(t){this.isStreamComplete=!1;let e=this._processPCM16Chunk(t);for(;e.length>=this.bufferSize;){const t=e.slice(0,this.bufferSize);this.audioQueue.push(t),e=e.slice(this.bufferSize)}e.length>0&&this.audioQueue.push(e),this.isPlaying||(this.isPlaying=!0,this.scheduledTime=this.context.currentTime+this.initialBufferTime,this.scheduleNextBuffer())}createAudioBuffer(t){const e=this.context.createBuffer(1,t.length,this.sampleRate);return e.getChannelData(0).set(t),e}scheduleNextBuffer(){for(;this.audioQueue.length>0&&this.scheduledTime<this.context.currentTime+.2;){const t=this.audioQueue.shift(),e=this.createAudioBuffer(t),n=this.context.createBufferSource();0===this.audioQueue.length&&(this.endOfQueueAudioSource&&(this.endOfQueueAudioSource.onended=null),this.endOfQueueAudioSource=n,n.onended=()=>{this.audioQueue.length||this.endOfQueueAudioSource!==n||(this.endOfQueueAudioSource=null,this.onComplete())}),n.buffer=e,n.connect(this.gainNode);const i=Math.max(this.scheduledTime,this.context.currentTime);n.start(i),this.scheduledTime=i+e.duration}if(0===this.audioQueue.length)this.isStreamComplete?(this.isPlaying=!1,this.checkInterval&&(clearInterval(this.checkInterval),this.checkInterval=null)):this.checkInterval||(this.checkInterval=setInterval(()=>{this.audioQueue.length>0&&this.scheduleNextBuffer()},100));else{const t=1e3*(this.scheduledTime-this.context.currentTime);setTimeout(()=>this.scheduleNextBuffer(),Math.max(0,t-50))}}stop(){this.isPlaying=!1,this.isStreamComplete=!0,this.audioQueue=[],this.scheduledTime=this.context.currentTime,this.checkInterval&&(clearInterval(this.checkInterval),this.checkInterval=null),this.gainNode.gain.linearRampToValueAtTime(0,this.context.currentTime+.1),setTimeout(()=>{this.gainNode.disconnect(),this.gainNode=this.context.createGain(),this.gainNode.connect(this.context.destination)},200)}async resume(){"suspended"===this.context.state&&await this.context.resume(),this.isStreamComplete=!1,this.scheduledTime=this.context.currentTime+this.initialBufferTime,this.gainNode.gain.setValueAtTime(1,this.context.currentTime)}complete(){this.isStreamComplete=!0,this.onComplete()}}class r{constructor(t){this.config=t,this.container=null,this.isMinimized=!1,this.isListening=!1,this.isConnected=!1,this.volume=0,this.onMicToggle=null,this.onConnect=null,this.onDisconnect=null,this.init()}init(){this.container=document.createElement("div"),this.container.className=`voice-assistant-container ${this.config.theme} position-${this.config.position}`,this.addStyles(),this.createUI(),document.body.appendChild(this.container),this.setupWaveAnimation()}addStyles(){if(!document.getElementById("voice-assistant-styles")){const t=document.createElement("style");t.id="voice-assistant-styles",t.textContent="\n      .voice-assistant-container {\n        position: fixed;\n        z-index: 999999;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\n        pointer-events: none;\n      }\n  \n      .voice-assistant-container * {\n        box-sizing: border-box;\n      }\n  \n      .voice-assistant-container.position-bottom-right {\n        bottom: 20px;\n        right: 20px;\n      }\n  \n      .voice-assistant-container.position-bottom-left {\n        bottom: 20px;\n        left: 20px;\n      }\n  \n      .voice-assistant-container.position-top-right {\n        top: 20px;\n        right: 20px;\n      }\n  \n      .voice-assistant-container.position-top-left {\n        top: 20px;\n        left: 20px;\n      }\n  \n      .voice-assistant-container.position-center {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n  \n      .voice-assistant-widget {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 20px;\n        pointer-events: auto;\n      }\n  \n      .voice-assistant-avatar {\n        position: relative;\n        width: 120px;\n        height: 120px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n  \n      .avatar-circle {\n        width: 100px;\n        height: 100px;\n        border-radius: 50%;\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        position: relative;\n        transition: all 0.3s ease;\n        cursor: pointer;\n        border: 3px solid rgba(255, 255, 255, 0.2);\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n      }\n  \n      .avatar-circle.connected {\n        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);\n        box-shadow: 0 0 30px rgba(79, 172, 254, 0.5);\n        animation: pulse 2s ease-in-out infinite;\n      }\n  \n      .avatar-circle.listening {\n        background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);\n        box-shadow: 0 0 40px rgba(250, 112, 154, 0.7);\n        animation: listening-pulse 0.5s ease-in-out infinite;\n      }\n  \n      .avatar-circle.talking {\n        background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);\n        box-shadow: 0 0 50px rgba(168, 237, 234, 0.8);\n        animation: talking-pulse 0.3s ease-in-out infinite;\n      }\n  \n      .avatar-waves {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 3px;\n      }\n  \n      .wave-bar {\n        width: 3px;\n        height: 20px;\n        background: rgba(255, 255, 255, 0.8);\n        border-radius: 2px;\n        animation: wave 1.5s ease-in-out infinite;\n      }\n  \n      .wave-bar:nth-child(1) { animation-delay: 0.1s; }\n      .wave-bar:nth-child(2) { animation-delay: 0.2s; }\n      .wave-bar:nth-child(3) { animation-delay: 0.3s; }\n      .wave-bar:nth-child(4) { animation-delay: 0.4s; }\n      .wave-bar:nth-child(5) { animation-delay: 0.5s; }\n  \n      .avatar-status {\n        position: absolute;\n        bottom: -5px;\n        right: -5px;\n        width: 24px;\n        height: 24px;\n        border-radius: 50%;\n        background: #10b981;\n        border: 3px solid white;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n      }\n  \n      .avatar-status.connected {\n        opacity: 1;\n        animation: status-pulse 2s ease-in-out infinite;\n      }\n  \n      .voice-assistant-controls {\n        display: flex;\n        align-items: center;\n        gap: 12px;\n        background: rgba(0, 0, 0, 0.8);\n        backdrop-filter: blur(20px);\n        border-radius: 25px;\n        padding: 8px 16px;\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n      }\n  \n      .control-button {\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n        border: none;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: 18px;\n        transition: all 0.3s ease;\n        position: relative;\n        overflow: hidden;\n      }\n  \n      .control-button:hover {\n        transform: scale(1.1);\n      }\n  \n      .control-button:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n        transform: none;\n      }\n  \n      .mic-button {\n        background: linear-gradient(135deg, #ff416c, #ff4b2b);\n        color: white;\n      }\n  \n      .mic-button.muted {\n        background: #6b7280;\n      }\n  \n      .connect-button {\n        background: linear-gradient(135deg, #11998e, #38ef7d);\n        color: white;\n      }\n  \n      .connect-button.connected {\n        background: linear-gradient(135deg, #ff9500, #ff5722);\n      }\n  \n      .voice-assistant-minimized {\n        width: 60px;\n        height: 60px;\n        border-radius: 50%;\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        cursor: pointer;\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n        transition: all 0.3s ease;\n        pointer-events: auto;\n        color: white;\n        font-size: 24px;\n      }\n  \n      .voice-assistant-minimized:hover {\n        transform: scale(1.1);\n      }\n  \n      .voice-assistant-minimized.connected {\n        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);\n        animation: pulse 2s ease-in-out infinite;\n      }\n  \n      @keyframes pulse {\n        0%, 100% { transform: scale(1); }\n        50% { transform: scale(1.05); }\n      }\n  \n      @keyframes listening-pulse {\n        0%, 100% { transform: scale(1); }\n        50% { transform: scale(1.1); }\n      }\n  \n      @keyframes talking-pulse {\n        0%, 100% { transform: scale(1); }\n        50% { transform: scale(1.15); }\n      }\n  \n      @keyframes wave {\n        0%, 100% { height: 20px; }\n        50% { height: 40px; }\n      }\n  \n      @keyframes status-pulse {\n        0%, 100% { opacity: 1; }\n        50% { opacity: 0.5; }\n      }\n  \n      /* Mobile responsive */\n      @media (max-width: 768px) {\n        .voice-assistant-avatar {\n          width: 100px;\n          height: 100px;\n        }\n        \n        .avatar-circle {\n          width: 80px;\n          height: 80px;\n        }\n        \n        .control-button {\n          width: 36px;\n          height: 36px;\n          font-size: 16px;\n        }\n      }\n  \n      /* Dark theme */\n      .voice-assistant-container.theme-dark .voice-assistant-controls {\n        background: rgba(17, 24, 39, 0.95);\n      }\n  \n      /* Light theme */\n      .voice-assistant-container.theme-light .voice-assistant-controls {\n        background: rgba(255, 255, 255, 0.95);\n        color: #1f2937;\n      }\n  \n      .voice-assistant-container.theme-light .control-button {\n        color: #1f2937;\n      }\n    ",document.head.appendChild(t)}}createUI(){this.isMinimized?this.createMinimizedUI():this.createFullUI()}createFullUI(){this.container.innerHTML='\n          <div class="voice-assistant-widget">\n            <div class="voice-assistant-avatar">\n              <div class="avatar-circle" id="avatar-circle">\n                <div class="avatar-waves">\n                  <div class="wave-bar"></div>\n                  <div class="wave-bar"></div>\n                  <div class="wave-bar"></div>\n                  <div class="wave-bar"></div>\n                  <div class="wave-bar"></div>\n                </div>\n              </div>\n              <div class="avatar-status" id="avatar-status"></div>\n            </div>\n            <div class="voice-assistant-controls">\n              <button class="control-button mic-button" id="mic-button" title="Toggle Microphone">\n                🎤\n              </button>\n              <button class="control-button connect-button" id="connect-button" title="Connect/Disconnect">\n                ▶️\n              </button>\n              <button class="control-button" id="minimize-button" title="Minimize">\n                ➖\n              </button>\n            </div>\n          </div>\n        ',this.setupEventListeners()}createMinimizedUI(){this.container.innerHTML='\n          <div class="voice-assistant-minimized" id="minimized-widget" title="Voice Assistant">\n            🎤\n          </div>\n        ',this.container.querySelector("#minimized-widget").addEventListener("click",()=>{this.isMinimized=!1,this.createUI()})}setupEventListeners(){const t=this.container.querySelector("#mic-button"),e=this.container.querySelector("#connect-button"),n=this.container.querySelector("#minimize-button");t.addEventListener("click",()=>{this.onMicToggle&&this.onMicToggle()}),e.addEventListener("click",()=>{this.isConnected&&this.onDisconnect?this.onDisconnect():!this.isConnected&&this.onConnect&&this.onConnect()}),n.addEventListener("click",()=>{this.isMinimized=!0,this.createUI()})}setupWaveAnimation(){this.waveInterval=setInterval(()=>{const t=this.container.querySelectorAll(".wave-bar");this.isListening&&this.volume>0?t.forEach((t,e)=>{const n=Math.min(50,20+100*this.volume*(.5+.5*Math.random()));t.style.height=`${n}px`}):this.isListening||t.forEach((t,e)=>{const n=15+10*Math.random();t.style.height=`${n}px`})},100)}updateConnectionStatus(t){this.isConnected=t;const e=this.container.querySelector("#avatar-circle"),n=this.container.querySelector("#avatar-status"),i=this.container.querySelector("#connect-button"),s=this.container.querySelector("#mic-button"),o=this.container.querySelector("#minimized-widget");t?(e?.classList.add("connected"),n?.classList.add("connected"),i?.classList.add("connected"),i&&(i.innerHTML="⏹️"),i&&(i.title="Disconnect"),s&&(s.disabled=!1),o&&o.classList.add("connected")):(e?.classList.remove("connected","listening","talking"),n?.classList.remove("connected"),i?.classList.remove("connected"),i&&(i.innerHTML="▶️"),i&&(i.title="Connect"),s&&(s.disabled=!0),o&&o.classList.remove("connected"))}updateListeningStatus(t){this.isListening=t;const e=this.container.querySelector("#avatar-circle"),n=this.container.querySelector("#mic-button");t?(e?.classList.add("listening"),e?.classList.remove("talking"),n&&n.classList.remove("muted")):(e?.classList.remove("listening"),n&&n.classList.add("muted"))}updateTalkingStatus(t){const e=this.container.querySelector("#avatar-circle");t?(e?.classList.add("talking"),e?.classList.remove("listening")):e?.classList.remove("talking")}updateVolume(t){this.volume=t}destroy(){this.waveInterval&&clearInterval(this.waveInterval),this.container&&this.container.parentNode&&this.container.parentNode.removeChild(this.container)}}class VoiceAssistant{constructor(){this.client=null,this.audioRecorder=null,this.audioStreamer=null,this.ui=null,this.config={backendUrl:"ws://localhost:8080",model:"models/gemini-2.0-flash-exp",theme:"theme-dark",position:"bottom-right",voiceName:"Aoede"},this.connected=!1,this.muted=!0,this.volume=0,this.isTalking=!1}async init(t={}){this.config={...this.config,...t},this.client=new s(this.config.backendUrl),this.audioRecorder=new o;try{const t=await e.audioContext({id:"voice-assistant-audio"});this.audioStreamer=new a(t),await this.audioStreamer.addWorklet("vumeter-out",i,t=>{this.volume=t.data.volume,this.ui?.updateVolume(this.volume)})}catch(t){console.error("Failed to initialize audio:",t)}this.ui=new r(this.config),this.setupEventHandlers(),console.log("Voice Assistant initialized successfully")}setupEventHandlers(){this.client.on("open",()=>{this.connected=!0,this.ui?.updateConnectionStatus(!0),console.log("Connected to voice assistant")}),this.client.on("close",()=>{this.connected=!1,this.ui?.updateConnectionStatus(!1),this.stopAudioRecording(),console.log("Disconnected from voice assistant")}),this.client.on("audio",t=>{this.isTalking=!0,this.ui?.updateTalkingStatus(!0),this.audioStreamer?.addPCM16(new Uint8Array(t))}),this.client.on("interrupted",()=>{this.audioStreamer?.stop(),this.isTalking=!1,this.ui?.updateTalkingStatus(!1)}),this.client.on("turncomplete",()=>{this.isTalking=!1,this.ui?.updateTalkingStatus(!1)}),this.audioRecorder.on("data",t=>{this.client.sendRealtimeInput([{mimeType:"audio/pcm;rate=16000",data:t}])}),this.audioRecorder.on("volume",t=>{this.ui?.updateVolume(t)}),this.ui.onMicToggle=()=>{this.toggleMicrophone()},this.ui.onConnect=()=>{this.connect()},this.ui.onDisconnect=()=>{this.disconnect()}}async connect(){if(this.connected||!this.client)return;const t={responseModalities:["AUDIO"],speechConfig:{voiceConfig:{prebuiltVoiceConfig:{voiceName:this.config.voiceName}}},systemInstruction:{parts:[{text:"You are a helpful AI voice assistant. Respond naturally and conversationally."}]}};try{await this.client.connect(this.config.model,t)}catch(t){console.error("Failed to connect:",t)}}disconnect(){this.connected&&this.client&&(this.stopAudioRecording(),this.client.disconnect())}toggleMicrophone(){this.connected&&(this.muted?this.startAudioRecording():this.stopAudioRecording())}async startAudioRecording(){if(this.audioRecorder&&this.connected)try{await this.audioRecorder.start(),this.muted=!1,this.ui?.updateListeningStatus(!0)}catch(t){console.error("Failed to start audio recording:",t)}}stopAudioRecording(){this.audioRecorder&&(this.audioRecorder.stop(),this.muted=!0,this.ui?.updateListeningStatus(!1))}destroy(){this.disconnect(),this.stopAudioRecording(),this.ui?.destroy(),this.audioStreamer&&this.audioStreamer.stop()}setConfig(t){this.config={...this.config,...t}}getStatus(){return{connected:this.connected,muted:this.muted,volume:this.volume,talking:this.isTalking}}}t.VoiceAssistant={instance:null,init(t={}){return this.instance?(console.warn("Voice Assistant already initialized"),this.instance):(this.instance=new VoiceAssistant,this.instance.init(t),this.instance)},destroy(){this.instance&&(this.instance.destroy(),this.instance=null)},getInstance(){return this.instance},connect(){return this.instance?.connect()},disconnect(){return this.instance?.disconnect()},toggleMic(){return this.instance?.toggleMicrophone()},getStatus(){return this.instance?.getStatus()||{connected:!1,muted:!0,volume:0,talking:!1}}},console.log("Voice Assistant Bundle loaded successfully")}(window);